// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGenerator_4_ConvolutionInputGenerator_dws_2u_64u_8u_5u_2u_2u_2u_ap_resource_lutram_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [15:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [15:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
wire   [0:0] icmp_ln781_fu_301_p2;
wire   [0:0] icmp_ln783_fu_323_p2;
wire   [0:0] and_ln829_fu_596_p2;
reg    ap_predicate_op113_read_state1;
reg    ap_predicate_op147_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
reg   [0:0] icmp_ln781_reg_928;
reg   [0:0] icmp_ln781_reg_928_pp0_iter1_reg;
reg   [0:0] icmp_ln783_reg_932;
reg   [0:0] icmp_ln783_reg_932_pp0_iter1_reg;
reg   [0:0] icmp_ln799_reg_936;
reg   [0:0] icmp_ln799_reg_936_pp0_iter1_reg;
reg    ap_predicate_op194_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
wire    ap_enable_reg_pp0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln799_fu_332_p2;
reg   [31:0] grp_load_fu_213_p1;
reg   [31:0] current_block_write_load_1_reg_940;
reg   [30:0] lshr_ln_reg_945;
wire   [8:0] current_line_in_block_fu_405_p2;
reg   [8:0] current_line_in_block_reg_950;
wire   [31:0] current_block_read_fu_777_p2;
reg   [31:0] current_block_read_reg_982;
wire   [0:0] icmp_ln801_fu_793_p2;
reg   [0:0] icmp_ln801_reg_988;
wire   [8:0] inputBuf_V_address0;
reg    inputBuf_V_ce0;
wire   [15:0] inputBuf_V_q0;
reg   [8:0] inputBuf_V_address1;
reg    inputBuf_V_ce1;
reg    inputBuf_V_we1;
wire   [8:0] inputBuf_V_1_address0;
reg    inputBuf_V_1_ce0;
wire   [15:0] inputBuf_V_1_q0;
reg   [8:0] inputBuf_V_1_address1;
reg    inputBuf_V_1_ce1;
reg    inputBuf_V_1_we1;
wire   [63:0] zext_ln832_fu_602_p1;
wire   [63:0] zext_ln786_fu_692_p1;
wire   [63:0] zext_ln805_fu_799_p1;
reg   [9:0] i_fu_82;
wire   [9:0] i_2_fu_307_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_1;
reg   [31:0] ofm_y_fu_86;
wire   [31:0] ofm_y_2_fu_530_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_load;
wire   [0:0] icmp_ln808_fu_417_p2;
wire   [0:0] icmp_ln811_fu_434_p2;
wire   [0:0] icmp_ln814_fu_459_p2;
wire   [0:0] icmp_ln817_fu_489_p2;
reg   [31:0] ofm_x_fu_90;
wire   [31:0] ofm_x_1_fu_483_p2;
reg   [31:0] ap_sig_allocacmp_ofm_x_load;
reg   [31:0] ap_sig_allocacmp_ofm_x_load_1;
reg   [31:0] inp_fu_94;
wire   [31:0] inp_2_fu_538_p3;
wire   [31:0] inp_1_fu_702_p2;
reg   [31:0] ap_sig_allocacmp_inp_load;
reg   [31:0] ap_sig_allocacmp_inp_load_2;
reg   [31:0] ap_sig_allocacmp_inp_load_1;
reg   [31:0] grp_load_fu_216_p1;
reg   [31:0] count_simd_fu_98;
wire   [31:0] count_simd_1_fu_453_p2;
reg   [31:0] ap_sig_allocacmp_count_simd_load;
reg   [31:0] ap_sig_allocacmp_count_simd_load_1;
reg   [31:0] k_y_fu_102;
wire   [31:0] k_y_1_fu_428_p2;
reg   [31:0] ap_sig_allocacmp_k_y_load;
reg   [31:0] current_block_write_fu_106;
wire   [31:0] current_block_write_4_fu_641_p3;
wire   [31:0] current_block_write_2_fu_730_p3;
reg   [31:0] ap_sig_allocacmp_current_block_write_load_1;
reg   [31:0] ap_sig_allocacmp_current_block_write_load_3;
reg   [31:0] ap_sig_allocacmp_current_block_write_load_4;
reg   [31:0] ap_sig_allocacmp_current_block_write_load;
reg   [31:0] ap_sig_allocacmp_current_block_write_load_2;
wire   [0:0] grp_fu_237_p2;
reg   [31:0] grp_load_fu_222_p1;
reg   [31:0] read_block_fu_110;
wire   [31:0] read_block_2_fu_623_p2;
wire   [31:0] read_block_1_fu_738_p2;
reg   [31:0] ap_sig_allocacmp_read_block_load;
reg   [31:0] ap_sig_allocacmp_read_block_load_2;
reg   [31:0] ap_sig_allocacmp_read_block_load_1;
reg   [31:0] grp_load_fu_219_p1;
reg   [31:0] k_x_fu_114;
wire   [31:0] k_x_1_fu_411_p2;
reg   [31:0] ap_sig_allocacmp_k_x_load;
reg   [31:0] current_line_fu_118;
wire   [31:0] grp_fu_231_p2;
reg   [31:0] ap_sig_allocacmp_current_line_load_2;
reg   [31:0] ap_sig_allocacmp_current_line_load_3;
reg   [31:0] ap_sig_allocacmp_current_line_load;
reg   [31:0] ap_sig_allocacmp_current_line_load_1;
reg   [31:0] grp_load_fu_225_p1;
reg   [31:0] grp_load_fu_228_p1;
reg   [31:0] counter_internal_block_fu_122;
wire   [31:0] counter_internal_block_2_fu_679_p3;
reg   [31:0] ap_sig_allocacmp_counter_internal_block_load;
reg   [31:0] ap_sig_allocacmp_counter_internal_block_load_1;
reg   [31:0] ap_sig_allocacmp_counter_internal_block_load_2;
wire   [15:0] tmp_fu_815_p4;
wire   [0:0] trunc_ln832_fu_608_p1;
wire   [0:0] trunc_ln786_fu_698_p1;
wire   [0:0] trunc_ln804_fu_357_p1;
wire   [2:0] trunc_ln804_2_fu_373_p1;
wire   [3:0] trunc_ln804_1_fu_361_p1;
wire   [3:0] shl_ln_fu_377_p3;
wire   [3:0] add_ln804_fu_385_p2;
wire   [3:0] select_ln804_fu_365_p3;
wire   [3:0] add_ln804_1_fu_391_p2;
wire   [8:0] shl_ln804_1_fu_397_p3;
wire   [8:0] trunc_ln781_fu_319_p1;
wire   [31:0] ofm_y_1_fu_518_p2;
wire   [0:0] icmp_ln820_fu_524_p2;
wire   [30:0] tmp_3_fu_580_p4;
wire   [0:0] icmp_ln829_fu_574_p2;
wire   [0:0] icmp_ln829_1_fu_590_p2;
wire   [31:0] current_block_write_3_fu_629_p2;
wire   [0:0] icmp_ln841_fu_635_p2;
wire   [31:0] counter_internal_block_1_fu_667_p2;
wire   [0:0] icmp_ln848_fu_673_p2;
wire   [31:0] current_block_write_1_fu_718_p2;
wire   [0:0] icmp_ln792_fu_724_p2;
wire   [31:0] add_ln800_fu_772_p2;
wire   [31:0] zext_ln800_fu_769_p1;
wire   [30:0] tmp_2_fu_783_p4;
wire   [31:0] add_ln802_fu_804_p2;
wire   [31:0] tmp_fu_815_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0;
reg    ap_predicate_op119_store_state1;
reg    ap_enable_operation_119;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_predicate_op153_store_state1;
reg    ap_enable_operation_153;
reg    ap_predicate_op187_load_state2;
reg    ap_enable_operation_187;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op191_load_state3;
reg    ap_enable_operation_191;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op121_store_state1;
reg    ap_enable_operation_121;
reg    ap_predicate_op155_store_state1;
reg    ap_enable_operation_155;
reg    ap_predicate_op188_load_state2;
reg    ap_enable_operation_188;
reg    ap_predicate_op192_load_state3;
reg    ap_enable_operation_192;
wire    ap_start_int;
reg    ap_condition_252;
reg    ap_condition_216;
reg    ap_condition_686;
reg    ap_condition_282;
reg    ap_condition_280;
reg    ap_condition_700;
reg    ap_condition_774;
reg    ap_condition_219;
reg    ap_condition_784;
reg    ap_condition_788;
reg    ap_condition_302;
reg    ap_condition_264;
reg    ap_condition_229;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

ConvolutionInputGenerator_4_ConvolutionInputGenerator_dws_2u_64u_8u_5u_2u_2u_2u_ap_resource_lutram_s_inpubkb #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
inputBuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_V_address0),
    .ce0(inputBuf_V_ce0),
    .q0(inputBuf_V_q0),
    .address1(inputBuf_V_address1),
    .ce1(inputBuf_V_ce1),
    .we1(inputBuf_V_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_4_ConvolutionInputGenerator_dws_2u_64u_8u_5u_2u_2u_2u_ap_resource_lutram_s_inpubkb #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
inputBuf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_V_1_address0),
    .ce0(inputBuf_V_1_ce0),
    .q0(inputBuf_V_1_q0),
    .address1(inputBuf_V_1_address1),
    .ce1(inputBuf_V_1_ce1),
    .we1(inputBuf_V_1_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_4_mux_232_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
mux_232_16_1_1_U1(
    .din0(inputBuf_V_q0),
    .din1(inputBuf_V_1_q0),
    .din2(tmp_fu_815_p3),
    .dout(tmp_fu_815_p4)
);

ConvolutionInputGenerator_4_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_216)) begin
            count_simd_fu_98 <= 32'd0;
        end else if ((1'b1 == ap_condition_252)) begin
            count_simd_fu_98 <= count_simd_1_fu_453_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            count_simd_fu_98 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_282)) begin
            counter_internal_block_fu_122 <= 32'd0;
        end else if (((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0))) begin
            counter_internal_block_fu_122 <= counter_internal_block_2_fu_679_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            counter_internal_block_fu_122 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_282)) begin
            current_block_write_fu_106 <= current_block_write_2_fu_730_p3;
        end else if ((1'b1 == ap_condition_280)) begin
            current_block_write_fu_106 <= current_block_write_4_fu_641_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            current_block_write_fu_106 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_237_p2 == 1'd1))) begin
        current_line_fu_118 <= 32'd0;
    end else if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_237_p2 == 1'd1))) begin
        current_line_fu_118 <= 32'd0;
    end else if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_237_p2 == 1'd0)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_237_p2 == 1'd0)))) begin
        current_line_fu_118 <= grp_fu_231_p2;
    end else if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        current_line_fu_118 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((icmp_ln781_fu_301_p2 == 1'd0)) begin
            i_fu_82 <= i_2_fu_307_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_82 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if (((icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0))) begin
            inp_fu_94 <= inp_1_fu_702_p2;
        end else if ((1'b1 == ap_condition_219)) begin
            inp_fu_94 <= inp_2_fu_538_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            inp_fu_94 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_219)) begin
            k_x_fu_114 <= 32'd0;
        end else if ((1'b1 == ap_condition_229)) begin
            k_x_fu_114 <= 32'd0;
        end else if ((1'b1 == ap_condition_252)) begin
            k_x_fu_114 <= 32'd0;
        end else if ((1'b1 == ap_condition_264)) begin
            k_x_fu_114 <= 32'd0;
        end else if ((1'b1 == ap_condition_302)) begin
            k_x_fu_114 <= k_x_1_fu_411_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_x_fu_114 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_219)) begin
            k_y_fu_102 <= 32'd0;
        end else if ((1'b1 == ap_condition_229)) begin
            k_y_fu_102 <= 32'd0;
        end else if ((1'b1 == ap_condition_252)) begin
            k_y_fu_102 <= 32'd0;
        end else if ((1'b1 == ap_condition_264)) begin
            k_y_fu_102 <= k_y_1_fu_428_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_y_fu_102 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_219)) begin
            ofm_x_fu_90 <= 32'd0;
        end else if ((1'b1 == ap_condition_229)) begin
            ofm_x_fu_90 <= ofm_x_1_fu_483_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ofm_x_fu_90 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_219)) begin
            ofm_y_fu_86 <= ofm_y_2_fu_530_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ofm_y_fu_86 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_686)) begin
        if ((1'b1 == ap_condition_282)) begin
            read_block_fu_110 <= read_block_1_fu_738_p2;
        end else if ((1'b1 == ap_condition_280)) begin
            read_block_fu_110 <= read_block_2_fu_623_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            read_block_fu_110 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln781_reg_928 <= icmp_ln781_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln799_reg_936 == 1'd1) & (icmp_ln783_reg_932 == 1'd0) & (icmp_ln781_reg_928 == 1'd0))) begin
        current_block_read_reg_982 <= current_block_read_fu_777_p2;
        icmp_ln801_reg_988 <= icmp_ln801_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln799_fu_332_p2 == 1'd1))) begin
        current_block_write_load_1_reg_940 <= grp_load_fu_213_p1;
        current_line_in_block_reg_950 <= current_line_in_block_fu_405_p2;
        lshr_ln_reg_945 <= {{ap_sig_allocacmp_k_y_load[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        icmp_ln781_reg_928_pp0_iter1_reg <= icmp_ln781_reg_928;
        icmp_ln783_reg_932_pp0_iter1_reg <= icmp_ln783_reg_932;
        icmp_ln799_reg_936_pp0_iter1_reg <= icmp_ln799_reg_936;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln783_reg_932 <= icmp_ln783_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        icmp_ln799_reg_936 <= icmp_ln799_fu_332_p2;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln781_fu_301_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_simd_load = 32'd0;
    end else begin
        ap_sig_allocacmp_count_simd_load = count_simd_fu_98;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_simd_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_count_simd_load_1 = count_simd_fu_98;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_counter_internal_block_load = 32'd0;
    end else begin
        ap_sig_allocacmp_counter_internal_block_load = counter_internal_block_fu_122;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_counter_internal_block_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_counter_internal_block_load_1 = counter_internal_block_fu_122;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_counter_internal_block_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_counter_internal_block_load_2 = counter_internal_block_fu_122;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_load = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_load = current_block_write_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_load_1 = current_block_write_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_load_2 = current_block_write_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_load_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_load_3 = current_block_write_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_load_4 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_load_4 = current_block_write_fu_106;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load = current_line_fu_118;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_1 = current_line_fu_118;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_2 = current_line_fu_118;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_3 = current_line_fu_118;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_82;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_inp_load = 32'd0;
    end else begin
        ap_sig_allocacmp_inp_load = inp_fu_94;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_inp_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_inp_load_1 = inp_fu_94;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_inp_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_inp_load_2 = inp_fu_94;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_x_load = 32'd0;
    end else begin
        ap_sig_allocacmp_k_x_load = k_x_fu_114;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_y_load = 32'd0;
    end else begin
        ap_sig_allocacmp_k_y_load = k_y_fu_102;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_x_load = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_x_load = ofm_x_fu_90;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_x_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_x_load_1 = ofm_x_fu_90;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_y_load = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_y_load = ofm_y_fu_86;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_read_block_load = 32'd0;
    end else begin
        ap_sig_allocacmp_read_block_load = read_block_fu_110;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_read_block_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_read_block_load_1 = read_block_fu_110;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_read_block_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_read_block_load_2 = read_block_fu_110;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if ((icmp_ln783_fu_323_p2 == 1'd1)) begin
            grp_load_fu_213_p1 = ap_sig_allocacmp_current_block_write_load;
        end else if (((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln799_fu_332_p2 == 1'd1))) begin
            grp_load_fu_213_p1 = ap_sig_allocacmp_current_block_write_load_1;
        end else begin
            grp_load_fu_213_p1 = 'bx;
        end
    end else begin
        grp_load_fu_213_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if ((icmp_ln783_fu_323_p2 == 1'd1)) begin
            grp_load_fu_216_p1 = ap_sig_allocacmp_inp_load_1;
        end else if ((1'b1 == ap_condition_774)) begin
            grp_load_fu_216_p1 = ap_sig_allocacmp_inp_load_2;
        end else begin
            grp_load_fu_216_p1 = 'bx;
        end
    end else begin
        grp_load_fu_216_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if (((icmp_ln783_fu_323_p2 == 1'd1) & (grp_fu_237_p2 == 1'd1))) begin
            grp_load_fu_219_p1 = ap_sig_allocacmp_read_block_load_1;
        end else if ((icmp_ln783_fu_323_p2 == 1'd0)) begin
            grp_load_fu_219_p1 = ap_sig_allocacmp_read_block_load;
        end else begin
            grp_load_fu_219_p1 = 'bx;
        end
    end else begin
        grp_load_fu_219_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if (((icmp_ln783_fu_323_p2 == 1'd1) & (grp_fu_237_p2 == 1'd1))) begin
            grp_load_fu_222_p1 = ap_sig_allocacmp_current_block_write_load_2;
        end else if (((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0))) begin
            grp_load_fu_222_p1 = ap_sig_allocacmp_current_block_write_load_3;
        end else begin
            grp_load_fu_222_p1 = 'bx;
        end
    end else begin
        grp_load_fu_222_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if ((icmp_ln783_fu_323_p2 == 1'd1)) begin
            grp_load_fu_225_p1 = ap_sig_allocacmp_current_line_load;
        end else if (((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0))) begin
            grp_load_fu_225_p1 = ap_sig_allocacmp_current_line_load_2;
        end else begin
            grp_load_fu_225_p1 = 'bx;
        end
    end else begin
        grp_load_fu_225_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if ((icmp_ln783_fu_323_p2 == 1'd1)) begin
            grp_load_fu_228_p1 = ap_sig_allocacmp_current_line_load_1;
        end else if (((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0))) begin
            grp_load_fu_228_p1 = ap_sig_allocacmp_current_line_load_3;
        end else begin
            grp_load_fu_228_p1 = 'bx;
        end
    end else begin
        grp_load_fu_228_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (ap_predicate_op147_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)) | ((ap_start_int == 1'b1) & (ap_predicate_op113_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (ap_predicate_op147_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (ap_predicate_op113_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if (((icmp_ln783_fu_323_p2 == 1'd1) & (trunc_ln786_fu_698_p1 == 1'd1))) begin
            inputBuf_V_1_address1 = zext_ln786_fu_692_p1;
        end else if ((1'b1 == ap_condition_784)) begin
            inputBuf_V_1_address1 = zext_ln832_fu_602_p1;
        end else begin
            inputBuf_V_1_address1 = 'bx;
        end
    end else begin
        inputBuf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_V_1_ce0 = 1'b1;
    end else begin
        inputBuf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln786_fu_698_p1 == 1'd1)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln832_fu_608_p1 == 1'd1)))) begin
        inputBuf_V_1_ce1 = 1'b1;
    end else begin
        inputBuf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln786_fu_698_p1 == 1'd1)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln832_fu_608_p1 == 1'd1)))) begin
        inputBuf_V_1_we1 = 1'b1;
    end else begin
        inputBuf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_700)) begin
        if (((icmp_ln783_fu_323_p2 == 1'd1) & (trunc_ln786_fu_698_p1 == 1'd0))) begin
            inputBuf_V_address1 = zext_ln786_fu_692_p1;
        end else if ((1'b1 == ap_condition_788)) begin
            inputBuf_V_address1 = zext_ln832_fu_602_p1;
        end else begin
            inputBuf_V_address1 = 'bx;
        end
    end else begin
        inputBuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_V_ce0 = 1'b1;
    end else begin
        inputBuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln786_fu_698_p1 == 1'd0)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln832_fu_608_p1 == 1'd0)))) begin
        inputBuf_V_ce1 = 1'b1;
    end else begin
        inputBuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln786_fu_698_p1 == 1'd0)) | (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (trunc_ln832_fu_608_p1 == 1'd0)))) begin
        inputBuf_V_we1 = 1'b1;
    end else begin
        inputBuf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op194_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (ap_predicate_op194_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & ~((ap_start_int == 1'b0) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else if (((~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2)) | (~((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0))) & (icmp_ln781_reg_928_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign add_ln800_fu_772_p2 = (current_block_write_load_1_reg_940 + 32'd1);

assign add_ln802_fu_804_p2 = ($signed(current_block_read_reg_982) + $signed(32'd4294967294));

assign add_ln804_1_fu_391_p2 = (add_ln804_fu_385_p2 + select_ln804_fu_365_p3);

assign add_ln804_fu_385_p2 = (trunc_ln804_1_fu_361_p1 + shl_ln_fu_377_p3);

assign and_ln829_fu_596_p2 = (icmp_ln829_fu_574_p2 & icmp_ln829_1_fu_590_p2);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start_int == 1'b0) | (1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_216 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln814_fu_459_p2 == 1'd1) & (icmp_ln811_fu_434_p2 == 1'd1) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_219 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln817_fu_489_p2 == 1'd1) & (icmp_ln814_fu_459_p2 == 1'd1) & (icmp_ln811_fu_434_p2 == 1'd1) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_229 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln817_fu_489_p2 == 1'd0) & (icmp_ln814_fu_459_p2 == 1'd1) & (icmp_ln811_fu_434_p2 == 1'd1) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_252 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln814_fu_459_p2 == 1'd0) & (icmp_ln811_fu_434_p2 == 1'd1) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_264 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln811_fu_434_p2 == 1'd0) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_280 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (grp_fu_237_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_282 = ((icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (grp_fu_237_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_302 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (icmp_ln808_fu_417_p2 == 1'd0) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_686 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op194_write_state3 == 1'b1) & (out_V_TREADY == 1'b0)))) | ((ap_predicate_op147_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op113_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_700 = ((ap_start_int == 1'b1) & (icmp_ln781_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_774 = ((icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln817_fu_489_p2 == 1'd1) & (icmp_ln814_fu_459_p2 == 1'd1) & (icmp_ln811_fu_434_p2 == 1'd1) & (icmp_ln808_fu_417_p2 == 1'd1) & (icmp_ln799_fu_332_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_784 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (trunc_ln832_fu_608_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_788 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (trunc_ln832_fu_608_p1 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_119 = (ap_predicate_op119_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_121 = (ap_predicate_op121_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_153 = (ap_predicate_op153_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_155 = (ap_predicate_op155_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_187 = (ap_predicate_op187_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_188 = (ap_predicate_op188_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_191 = (ap_predicate_op191_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_192 = (ap_predicate_op192_load_state3 == 1'b1);
end

assign ap_enable_reg_pp0_iter0 = 1'b0;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op113_read_state1 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op119_store_state1 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (trunc_ln832_fu_608_p1 == 1'd0));
end

always @ (*) begin
    ap_predicate_op121_store_state1 = ((1'd1 == and_ln829_fu_596_p2) & (icmp_ln783_fu_323_p2 == 1'd0) & (icmp_ln781_fu_301_p2 == 1'd0) & (trunc_ln832_fu_608_p1 == 1'd1));
end

always @ (*) begin
    ap_predicate_op147_read_state1 = ((icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op153_store_state1 = ((icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (trunc_ln786_fu_698_p1 == 1'd0));
end

always @ (*) begin
    ap_predicate_op155_store_state1 = ((icmp_ln783_fu_323_p2 == 1'd1) & (icmp_ln781_fu_301_p2 == 1'd0) & (trunc_ln786_fu_698_p1 == 1'd1));
end

always @ (*) begin
    ap_predicate_op187_load_state2 = ((icmp_ln799_reg_936 == 1'd1) & (icmp_ln783_reg_932 == 1'd0) & (icmp_ln781_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op188_load_state2 = ((icmp_ln799_reg_936 == 1'd1) & (icmp_ln783_reg_932 == 1'd0) & (icmp_ln781_reg_928 == 1'd0));
end

always @ (*) begin
    ap_predicate_op191_load_state3 = ((icmp_ln799_reg_936_pp0_iter1_reg == 1'd1) & (icmp_ln783_reg_932_pp0_iter1_reg == 1'd0) & (icmp_ln781_reg_928_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op192_load_state3 = ((icmp_ln799_reg_936_pp0_iter1_reg == 1'd1) & (icmp_ln783_reg_932_pp0_iter1_reg == 1'd0) & (icmp_ln781_reg_928_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op194_write_state3 = ((icmp_ln799_reg_936_pp0_iter1_reg == 1'd1) & (icmp_ln783_reg_932_pp0_iter1_reg == 1'd0) & (icmp_ln781_reg_928_pp0_iter1_reg == 1'd0));
end

assign count_simd_1_fu_453_p2 = (ap_sig_allocacmp_count_simd_load_1 + 32'd1);

assign counter_internal_block_1_fu_667_p2 = (ap_sig_allocacmp_counter_internal_block_load_2 + 32'd1);

assign counter_internal_block_2_fu_679_p3 = ((icmp_ln848_fu_673_p2[0:0] == 1'b1) ? 32'd0 : counter_internal_block_1_fu_667_p2);

assign current_block_read_fu_777_p2 = (add_ln800_fu_772_p2 + zext_ln800_fu_769_p1);

assign current_block_write_1_fu_718_p2 = (grp_load_fu_222_p1 + 32'd1);

assign current_block_write_2_fu_730_p3 = ((icmp_ln792_fu_724_p2[0:0] == 1'b1) ? 32'd0 : current_block_write_1_fu_718_p2);

assign current_block_write_3_fu_629_p2 = (ap_sig_allocacmp_current_block_write_load_4 + 32'd1);

assign current_block_write_4_fu_641_p3 = ((icmp_ln841_fu_635_p2[0:0] == 1'b1) ? 32'd0 : current_block_write_3_fu_629_p2);

assign current_line_in_block_fu_405_p2 = (shl_ln804_1_fu_397_p3 + trunc_ln781_fu_319_p1);

assign grp_fu_231_p2 = (grp_load_fu_228_p1 + 32'd1);

assign grp_fu_237_p2 = ((grp_fu_231_p2 == 32'd320) ? 1'b1 : 1'b0);

assign i_2_fu_307_p2 = (ap_sig_allocacmp_i_1 + 10'd1);

assign icmp_ln781_fu_301_p2 = ((ap_sig_allocacmp_i_1 == 10'd960) ? 1'b1 : 1'b0);

assign icmp_ln783_fu_323_p2 = ((ap_sig_allocacmp_inp_load < 32'd320) ? 1'b1 : 1'b0);

assign icmp_ln792_fu_724_p2 = ((current_block_write_1_fu_718_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln799_fu_332_p2 = ((ap_sig_allocacmp_counter_internal_block_load < 32'd255) ? 1'b1 : 1'b0);

assign icmp_ln801_fu_793_p2 = ((tmp_2_fu_783_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln808_fu_417_p2 = ((k_x_1_fu_411_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln811_fu_434_p2 = ((k_y_1_fu_428_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln814_fu_459_p2 = ((count_simd_1_fu_453_p2 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln817_fu_489_p2 = ((ofm_x_1_fu_483_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln820_fu_524_p2 = ((ofm_y_1_fu_518_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln829_1_fu_590_p2 = ((tmp_3_fu_580_p4 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln829_fu_574_p2 = ((ap_sig_allocacmp_counter_internal_block_load_1 < 32'd319) ? 1'b1 : 1'b0);

assign icmp_ln841_fu_635_p2 = ((current_block_write_3_fu_629_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln848_fu_673_p2 = ((counter_internal_block_1_fu_667_p2 == 32'd319) ? 1'b1 : 1'b0);

assign inp_1_fu_702_p2 = (grp_load_fu_216_p1 + 32'd1);

assign inp_2_fu_538_p3 = ((icmp_ln820_fu_524_p2[0:0] == 1'b1) ? 32'd0 : grp_load_fu_216_p1);

assign inputBuf_V_1_address0 = zext_ln805_fu_799_p1;

assign inputBuf_V_address0 = zext_ln805_fu_799_p1;

assign k_x_1_fu_411_p2 = (ap_sig_allocacmp_k_x_load + 32'd1);

assign k_y_1_fu_428_p2 = (ap_sig_allocacmp_k_y_load + 32'd1);

assign ofm_x_1_fu_483_p2 = (ap_sig_allocacmp_ofm_x_load_1 + 32'd1);

assign ofm_y_1_fu_518_p2 = (ap_sig_allocacmp_ofm_y_load + 32'd1);

assign ofm_y_2_fu_530_p3 = ((icmp_ln820_fu_524_p2[0:0] == 1'b1) ? 32'd0 : ofm_y_1_fu_518_p2);

assign out_V_TDATA = tmp_fu_815_p4;

assign read_block_1_fu_738_p2 = (grp_load_fu_219_p1 + 32'd1);

assign read_block_2_fu_623_p2 = (ap_sig_allocacmp_read_block_load_2 + 32'd1);

assign select_ln804_fu_365_p3 = ((trunc_ln804_fu_357_p1[0:0] == 1'b1) ? 4'd5 : 4'd0);

assign shl_ln804_1_fu_397_p3 = {{add_ln804_1_fu_391_p2}, {5'd0}};

assign shl_ln_fu_377_p3 = {{trunc_ln804_2_fu_373_p1}, {1'd0}};

assign tmp_2_fu_783_p4 = {{current_block_read_fu_777_p2[31:1]}};

assign tmp_3_fu_580_p4 = {{grp_load_fu_219_p1[31:1]}};

assign tmp_fu_815_p3 = ((icmp_ln801_reg_988[0:0] == 1'b1) ? add_ln802_fu_804_p2 : current_block_read_reg_982);

assign trunc_ln781_fu_319_p1 = ap_sig_allocacmp_count_simd_load[8:0];

assign trunc_ln786_fu_698_p1 = grp_load_fu_213_p1[0:0];

assign trunc_ln804_1_fu_361_p1 = ap_sig_allocacmp_k_x_load[3:0];

assign trunc_ln804_2_fu_373_p1 = ap_sig_allocacmp_ofm_x_load[2:0];

assign trunc_ln804_fu_357_p1 = ap_sig_allocacmp_k_y_load[0:0];

assign trunc_ln832_fu_608_p1 = grp_load_fu_222_p1[0:0];

assign zext_ln786_fu_692_p1 = grp_load_fu_225_p1;

assign zext_ln800_fu_769_p1 = lshr_ln_reg_945;

assign zext_ln805_fu_799_p1 = current_line_in_block_reg_950;

assign zext_ln832_fu_602_p1 = grp_load_fu_225_p1;

always @ (posedge ap_clk) begin
    ap_enable_reg_pp0_iter1 <= 1'b0;
    ap_enable_reg_pp0_iter2 <= 1'b0;
end

endmodule //ConvolutionInputGenerator_4_ConvolutionInputGenerator_dws_2u_64u_8u_5u_2u_2u_2u_ap_resource_lutram_s
